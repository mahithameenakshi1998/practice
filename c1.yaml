AWSTemplateFormatVersion: '2010-09-09'
Description: Create a network stack with a public vpc, fargate cluster and load balancer as a parent stack. 

Mappings: 
  SubnetConfig:
    VPC:
      CIDR: '10.224.128.0/19'
    PrivateOne:
      CIDR: '10.224.128.96/27'
    PrivateTwo:
      CIDR: '10.224.128.64/27'  

Resources: 
    VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap ['SubnetConfig', 'VPC', 'CIDR']      
  
  PrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Fn::Select:
        - 0
        - Fn::GetAZs: {Ref: 'AWS::Region'}   
      VpcId: !Ref VPC      
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateOne', 'CIDR']
      MapPublicIpOnLaunch: true
  
  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Fn::Select:
        - 1
        - Fn::GetAZs: {Ref: 'AWS::Region'}   
      VpcId: !Ref VPC      
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateTwo', 'CIDR']
      MapPublicIpOnLaunch: true    
  TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AmazonSideAsn: 65200
      Description: "ICW Transit Gateway - Primary AWS Region"
      AssociationDefaultRouteTableId: tgw-rtb-0cba08631c0268770
      AutoAcceptSharedAttachments: Disbale
      DefaultRouteTableAssociation: Enable
      DefaultRouteTablePropagation: Enable
      DnsSupport: Enable
      MulticastSupport: Disable
      PropagationDefaultRouteTableId: tgw-rtb-0cba08631c0268770
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"     

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC 
      
  Route:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0' 
      GatewayId: !Ref TransitGateway  

  SubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties:
      SubnetId: !Ref PrivateSubnetOne
      RouteTableId: !Ref RouteTable    

  SubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties:
      SubnetId: !Ref PrivateSubnetTwo
      RouteTableId: !Ref RouteTable 
